# Исходный код:
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

# Решение, если исходный список это непрерывная последовательность натуральных чисел:
primes = []         # создаем пустой список для простых чисел
not_primes = []     # создаем пустой список для чисел, которые не являются простыми
for i in range(2, len(numbers)+1):  # создаем дублирующий диапазон для перебора, высчитывая длину списка, но исключая единицу
    for j in range(2, i-1):         # подбираем делители в диапазоне от 2 до делимого числа (не включительно)
        if i % j == 0:              # если остаток от деления равен нулю, то делитель подобран
            not_primes.append(i)    # добавляем делимое в список составных чисел
            break                   # дальнейший поиск делителей не имеет смысла, выходим из подцикла
    else:                           # если делители не подобраны, значит число является простым
        primes.append(i)            # добавляем делимое в список простых чисел
print('Primes:', primes)
print('Not Primes:', not_primes)
#P.S. Введение булевой переменной is_prime показалось мне лишним

# Решение, если исходный список это НЕ непрерывная случайная последовательность натуральных чисел:
rnd_numbers = [3, 54, 6, 2, 15, 9, 1, 19, 21, 111, 37, 65]

rnd_numbers.remove(1)   # исключаем единицу из списка (если имеется)
primes2 = []            # создаем пустой список для простых чисел
not_primes2 = []        # создаем пустой список для чисел, которые не являются простыми
for i in rnd_numbers:   # последовательно перебираем список случайных натуральных чисел
    for j in range(2, i-1):         # подбираем делители в диапазоне от 2 до делимого числа (не включительно)
        if i % j == 0:              # если остаток от деления равен нулю, то делитель подобран
            not_primes2.append(i)   # добавляем делимое в список составных чисел
            break                   # дальнейший поиск делителей не имеет смысла, выходим из подцикла
    else:                           # если делители не подобраны, значит число является простым
        primes2.append(i)           # добавляем делимое в список простых чисел
print('\nPrimes 2:', sorted(primes2))
print('Not Primes 2:', sorted(not_primes2))
